[{"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/index.js":"1","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/App.js":"2","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Host.jsx":"3","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Banner.jsx":"4","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Cards.jsx":"5","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Navbar.jsx":"6","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Footer.jsx":"7","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Register.jsx":"8","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Card.jsx":"9","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/AuthContext.jsx":"10","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/AuthReducer.jsx":"11","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/Login/Login.jsx":"12","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/apiCalls.js":"13","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/login/Login.jsx":"14","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/webinar/Webinar.jsx":"15","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/myWebinar/MyWebinar.jsx":"16"},{"size":370,"mtime":1660143428924,"results":"17","hashOfConfig":"18"},{"size":778,"mtime":1660216004723,"results":"19","hashOfConfig":"18"},{"size":1486,"mtime":1660216096865,"results":"20","hashOfConfig":"18"},{"size":529,"mtime":1660216390994,"results":"21","hashOfConfig":"18"},{"size":435,"mtime":1660216314589,"results":"22","hashOfConfig":"18"},{"size":8172,"mtime":1660217759094,"results":"23","hashOfConfig":"18"},{"size":3072,"mtime":1660117845307,"results":"24","hashOfConfig":"18"},{"size":9493,"mtime":1660212305296,"results":"25","hashOfConfig":"18"},{"size":2226,"mtime":1660216302437,"results":"26","hashOfConfig":"18"},{"size":742,"mtime":1660143491978,"results":"27","hashOfConfig":"18"},{"size":689,"mtime":1660152738551,"results":"28","hashOfConfig":"18"},{"size":1803,"mtime":1660141634484,"results":"29","hashOfConfig":"18"},{"size":614,"mtime":1660148244387,"results":"30","hashOfConfig":"18"},{"size":2088,"mtime":1660180652116,"results":"31","hashOfConfig":"18"},{"size":933,"mtime":1660148989493,"results":"32","hashOfConfig":"18"},{"size":936,"mtime":1660214027181,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1lviv6c",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"37"},"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/index.js",[],[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/App.js",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Host.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Banner.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Cards.jsx",["85","86"],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Navbar.jsx",["87","88","89","90","91","92"],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Footer.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Register.jsx",["93","94"],[],"import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { useRef } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport CountryCode from \"../CountryCode.json\";\n\nconst Register = ({ posts }) => {\n  const [countryCode, setCountryCode] = useState(CountryCode);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [message, setMessage] = useState(null);\n  const { user } = useContext(AuthContext);\n\n  console.log(posts);\n  const postSelected = useRef();\n  const firstName = useRef();\n  const lastName = useRef();\n  const email = useRef();\n  const dialCode = useRef();\n  const phoneNumber = useRef();\n  const code = useRef();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const body = {\n      username: firstName.current.value,\n      lastName: lastName.current.value,\n      email: email.current.value,\n      postSelected: postSelected.current.value,\n    };\n    const post = posts?.filter(\n      (post) => post.title === postSelected.current.value\n    );\n\n    setSelectedPostId(post[0].id);\n\n    await fetch(`http://localhost:3003/favourites/posts/${selectedPostId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        if (res?.status === 403) setMessage(\"Webinar already Registered\");\n        if (res?.status === 200) setMessage(\"Registered\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div\n      id=\"register\"\n      className=\"py-16 px-14 my-18 mx-14 border border-gray-200 rounded-md shadow-2xl\"\n    >\n      <div className=\"max-w-[580px] mx-auto flex flex-col text-xl items-center\">\n        <h1 className=\"text-[#01254F] font-medium\">\n          Register for a Webinar Now\n        </h1>\n        <p className=\"text-sm text-center text-gray-700 my-5 py-2 px-5\">\n          Please fill in the form below and you will be contacted by one of our\n          professional business experts.\n        </p>\n      </div>\n      <div className=\"mt-5 md:mt-0 md:col-span-2 max-w-[580px] mx-auto\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"overflow-hidden sm:rounded-md\">\n            <div className=\" bg-white\">\n              <div className=\"grid grid-cols-6 gap-6\">\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    Topic\n                  </label>\n                  <select\n                    ref={postSelected}\n                    id=\"country\"\n                    name=\"country\"\n                    autoComplete=\"country-name\"\n                    className=\"mt-1 block w-full py-2 px-3 font-light text-gray-700 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                  >\n                    {posts?.map((post) => {\n                      if (!post.favourited)\n                        return <option key={post.id}>{post?.title}</option>;\n                    })}\n                  </select>\n                </div>\n\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    First name\n                  </label>\n                  <input\n                    ref={firstName}\n                    required\n                    type=\"text\"\n                    name=\"first-name\"\n                    id=\"first-name\"\n                    autoComplete=\"given-name\"\n                    className=\"peer mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                  />\n                  <p className=\"invisible peer-invalid:visible text-red-700 font-light\">\n                    Please enter your first name\n                  </p>\n                </div>\n\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    Last name\n                  </label>\n                  <input\n                    ref={lastName}\n                    required\n                    type=\"text\"\n                    name=\"last-name\"\n                    id=\"last-name\"\n                    autoComplete=\"family-name\"\n                    className=\"peer mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                  />\n                  <p className=\"invisible peer-invalid:visible text-red-700 font-light\">\n                    Please enter your last name\n                  </p>\n                </div>\n\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    Email\n                  </label>\n                  <input\n                    ref={email}\n                    required\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                    autoComplete=\"email\"\n                    className=\"peer mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                  />\n                  <p className=\"invisible peer-invalid:visible text-red-700 font-light\">\n                    Please enter a valid email address\n                  </p>\n                </div>\n\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    Phone\n                  </label>\n                  <div className=\"flex gap-2\">\n                    <div className=\"flex-2 \">\n                      <select\n                        ref={dialCode}\n                        id=\"country\"\n                        name=\"country\"\n                        autoComplete=\"country-name\"\n                        className=\"mt-1 block w-full py-2 px-3 border border-gray-300 font-light text-gray-700 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                      >\n                        {countryCode.map((country) => (\n                          <option key={country.name}>\n                            {country.dial_code}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div className=\"flex-1\">\n                      <input\n                        ref={phoneNumber}\n                        type=\"number\"\n                        name=\"street-address\"\n                        id=\"street-address\"\n                        autoComplete=\"street-address\"\n                        className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-span-6\">\n                  <label className=\"block text-lg font-light text-gray-700\">\n                    Mobile Authentication\n                  </label>\n                  <div className=\"flex gap-2\">\n                    <div className=\"flex-2\">\n                      <button\n                        type=\"submit\"\n                        className=\"mt-1 cursor-pointer hover:bg-gray-200 block w-full py-2 px-3 font-light text-gray-700 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm \"\n                      >\n                        GET CODE\n                      </button>\n                    </div>\n\n                    <div className=\"flex-1\">\n                      <input\n                        ref={code}\n                        type=\"text\"\n                        name=\"street-address\"\n                        id=\"street-address\"\n                        autoComplete=\"street-address\"\n                        className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\" bg-gray-50 text-right\">\n              <button\n                type=\"submit\"\n                className=\"mt-3 cursor-pointer disabled:cursor-not-allowed disabled:bg-gray-300 disabled:text-gray-400 block w-full py-2 px-3 border border-gray-300 bg-[#01254F] text-white rounded-md shadow-sm focus:outline-none focus:ring-[#01254F] focus:border-[#01254F] sm:text-sm\"\n              >\n                Register\n              </button>\n              {message && (\n                <p\n                  className={`${\n                    message === \"Registered\"\n                      ? \"text-[#01254F] animate-pulse tracking-wide font-bold\"\n                      : \"text-red-700\"\n                  }  font-light text-center`}\n                >\n                  {message}\n                </p>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/components/Card.jsx",["95"],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/AuthContext.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/AuthReducer.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/Login/Login.jsx",["96"],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/apiCalls.js",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/login/Login.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/webinar/Webinar.jsx",[],[],"/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/pages/myWebinar/MyWebinar.jsx",["97"],[],"import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Cards from \"../../components/Cards\";\nimport Navbar from \"../../components/Navbar\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst MyWebinar = () => {\n  const [myWebinarList, setMyWebinarList] = useState([]);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:3003/posts?favourited=1&author=${user?.user?.id}`\n          //   {{url}}/posts?favourited=1&author=userId\n        );\n        const json = await response.json();\n        setMyWebinarList(json?.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Navbar myWebinarPage />\n      <Cards posts={myWebinarList} myList />\n    </div>\n  );\n};\n\nexport default MyWebinar;\n",{"ruleId":"98","severity":1,"message":"99","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"102","line":3,"column":21,"nodeType":"100","messageId":"101","endLine":3,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":144,"column":15,"nodeType":"105","endLine":147,"endColumn":16},{"ruleId":"103","severity":1,"message":"106","line":157,"column":17,"nodeType":"105","endLine":160,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":158,"column":24,"nodeType":"109","messageId":"110","endLine":158,"endColumn":44},{"ruleId":"103","severity":1,"message":"104","line":176,"column":15,"nodeType":"105","endLine":179,"endColumn":16},{"ruleId":"103","severity":1,"message":"106","line":182,"column":15,"nodeType":"105","endLine":185,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":183,"column":22,"nodeType":"109","messageId":"110","endLine":183,"endColumn":42},{"ruleId":"98","severity":1,"message":"111","line":8,"column":23,"nodeType":"100","messageId":"101","endLine":8,"endColumn":37},{"ruleId":"112","severity":1,"message":"113","line":81,"column":40,"nodeType":"114","messageId":"115","endLine":81,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":47,"column":31,"nodeType":"118","messageId":"119","endLine":47,"endColumn":33},{"ruleId":"98","severity":1,"message":"120","line":10,"column":29,"nodeType":"100","messageId":"101","endLine":10,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"124"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'setCountryCode' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.user?.id'. Either include it or remove the dependency array.","ArrayExpression",["125"],{"desc":"126","fix":"127"},"Update the dependencies array to be: [user?.user?.id]",{"range":"128","text":"129"},[787,789],"[user?.user?.id]"]