{"ast":null,"code":"export const loginCall = async (userCredentials, dispatch) => {\n  const res = await fetch(\"http://localhost:3003/auth/email/login\", {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userCredentials)\n  });\n  const result = res.json();\n  console.log(result.data);\n  dispatch({\n    type: \"LOGIN_START\"\n  });\n\n  try {\n    const res = await fetch(\"http://localhost:3003/auth/email/login\", {\n      method: \"POST\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userCredentials)\n    });\n    const result = res.json();\n    console.log(result.data);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LOGIN_FAILURE\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["loginCall","userCredentials","dispatch","res","fetch","method","headers","body","JSON","stringify","result","json","console","log","data","type","payload","error"],"sources":["/Users/daniyalmalik/Desktop/webinar-react-tw/application/src/context/apiCalls.js"],"sourcesContent":["export const loginCall = async (userCredentials, dispatch) => {\n  const res = await fetch(\"http://localhost:3003/auth/email/login\", {\n    method: \"POST\", // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userCredentials),\n  });\n  const result = res.json();\n  console.log(result.data);\n  dispatch({ type: \"LOGIN_START\" });\n  try {\n    const res = await fetch(\"http://localhost:3003/auth/email/login\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userCredentials),\n    });\n    const result = res.json();\n    console.log(result.data);\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\n  } catch (error) {\n    dispatch({ type: \"LOGIN_FAILURE\", payload: error });\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,OAAOC,eAAP,EAAwBC,QAAxB,KAAqC;EAC5D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;IAChEC,MAAM,EAAE,MADwD;IAChD;IAChBC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFuD;IAKhEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,eAAf;EAL0D,CAA3C,CAAvB;EAOA,MAAMS,MAAM,GAAGP,GAAG,CAACQ,IAAJ,EAAf;EACAC,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;EACAZ,QAAQ,CAAC;IAAEa,IAAI,EAAE;EAAR,CAAD,CAAR;;EACA,IAAI;IACF,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;MAChEC,MAAM,EAAE,MADwD;MAChD;MAChBC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFuD;MAKhEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,eAAf;IAL0D,CAA3C,CAAvB;IAOA,MAAMS,MAAM,GAAGP,GAAG,CAACQ,IAAJ,EAAf;IACAC,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;IACAZ,QAAQ,CAAC;MAAEa,IAAI,EAAE,eAAR;MAAyBC,OAAO,EAAEN,MAAM,CAACI;IAAzC,CAAD,CAAR;EACD,CAXD,CAWE,OAAOG,KAAP,EAAc;IACdf,QAAQ,CAAC;MAAEa,IAAI,EAAE,eAAR;MAAyBC,OAAO,EAAEC;IAAlC,CAAD,CAAR;EACD;AACF,CAzBM"},"metadata":{},"sourceType":"module"}